{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","onChange","type","App","_useState","useState","_useState2","Object","slicedToArray","setMonsters","_useState3","_useState4","searchQuery","setSearchQuery","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","e","target","value","card_list_component_CardList","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0PAIaA,SAAO,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OACEE,IAAI,UACJC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BAELR,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQE,MACpBT,EAAAC,EAAAC,cAAA,aAAKH,EAAMQ,QAAQG,MAAnB,QCLSC,SAAW,SAAAZ,GAAK,OAC3BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZJ,EAAMa,SAASC,IAAI,SAAAN,GAAO,OACzBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,SCLzBS,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACvBnB,EAAAC,EAAAC,cAAA,SACEC,UAAU,SACViB,SAAUD,EACVE,KAAK,SACLH,YAAaA,YCuCjB,SAASI,IACP,IAAAC,EAAgCC,mBAAS,IAAzCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOX,EAAPa,EAAA,GAAiBG,EAAjBH,EAAA,GACAI,EAAsCL,mBAAS,IAA/CM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAOE,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GAGAG,oBAAU,WACRC,MAAM,8CAA8CC,KAAK,SAAAC,GAAQ,OAC/DA,EAASC,OAAOF,KAAK,SAAAG,GAAK,OAAIV,EAAYU,QAE3C,IACH,IAIMC,EAAmB3B,EAAS4B,OAAO,SAAAjC,GAAO,OAC9CA,EAAQE,KAAKgC,cAAcC,SAASX,EAAYU,iBAIlD,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACyC,EAAD,CACExB,aAba,SAAAyB,GACnBhB,EAAYhB,GACZoB,EAAgBY,EAAEC,OAAOC,QAYnB5B,YAAY,uBAEdlB,EAAAC,EAAAC,cAAC6C,EAAD,CAAUnC,SAAU2B,KAO5B,IAAMS,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOpD,EAAAC,EAAAC,cAACoB,EAAD,MAAS0B","file":"static/js/main.7869bda1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = props => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}\r\n    />\r\n    <h2> {props.monster.name}</h2>\r\n    <p> {props.monster.email} </p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = props => (\r\n  <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    onChange={handleChange}\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n  />\r\n);\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nimport \"./styles.css\";\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       monsters: [],\n//       searchQuery: \"\"\n//     };\n    \n//     // No need to bind functions since arrow functions do that explicitly.\n//     // this.handleChange = this.handleChange.bind(this);\n//   }\n\n//   componentDidMount() {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\").then(response =>\n//       response.json().then(users => this.setState({ monsters: users }))\n//       );\n//   }\n\n//   handleChange = e => {\n//     this.setState({ searchQuery: e.target.value });\n//   };\n\n//   render() {\n//     const { monsters, searchQuery } = this.state;\n//     const filteredMonsters = monsters.filter(monster =>\n//       monster.name.toLowerCase().includes(searchQuery.toLowerCase())\n//     );\n\n//     return (\n//       <div className=\"App\">\n//         <h1>Monsters Rolodex</h1>\n//         <SearchBox\n//           handleChange={this.handleChange}\n//           placeholder=\"Search Monsters...\"\n//         />\n//         <CardList monsters={filteredMonsters} />\n//       </div>\n//     );\n//   }\n// }\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response =>\n      response.json().then(users => setMonsters(users))\n      );\n  }, [])\n  const handleChange = e =>{\n    setMonsters(monsters);\n    setSearchQuery( e.target.value)\n  }\n  const filteredMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n    \n\n  return (\n    <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={handleChange}\n          placeholder=\"Search Monsters...\"\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n  );\n}\n\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}